pipeline {
  environment {
    module="dummy"
  }
  agent {
    kubernetes {
      //Cloud Kubernetes
      yaml """
      kind: Pod
      metadata:
        name: kaniko
      spec:
        containers:
        - name: kaniko
          image: gcr.io/kaniko-project/executor:debug-539ddefcae3fd6b411a95982a830d987f4214251
          imagePullPolicy: IfNotPresent
          command:
          - cat
          tty: true
          volumeMounts:
            - name: docker-config
              mountPath: /kaniko/.docker
        - name: helm
          image: docker.io/alpine/helm:latest
          imagePullPolicy: IfNotPresent
          command:
          -  cat
          tty: true
        - name: nodejs
          image: docker.io/nodejscn/node:latest
          imagePullPolicy: IfNotPresent
          command:
          -  cat
          tty: true
        - name: awscli
          image: docker.io/mesosphere/aws-cli:latest
          imagePullPolicy: IfNotPresent
          command:
          -  cat
          tty: true
        volumes:
          - name: docker-config
            configMap:
              name: docker-config
      """
    }
  }
  stages {
    stage('package') {
      tools {maven 'mvn'}
      steps {
        checkout([$class: 'GitSCM', branches: [[name: '*/$BR_NAME']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/riqio/svc_dummyservice.git']]])
        sh 'mvn clean install -DskipTests'
      }
    }
    stage('dockerize') {
      steps {
        container(name: 'kaniko') {
          sh '''      
          /kaniko/executor --dockerfile `pwd`/Dockerfile --context `pwd` --destination=641518622681.dkr.ecr.us-west-2.amazonaws.com/svc-dummy:latest --destination=641518622681.dkr.ecr.us-west-2.amazonaws.com/svc-dummy:v$BUILD_NUMBER
          '''
        }
      }
    }
    stage('deploy') {
      steps {
        container(name: 'helm') {
          echo 'Deploying Dummy Service'
          sh 'echo build no is $BUILD_NUMBER'
          sh '''pwd
            ls -l
            cd $WORKSPACE/deployment
            ls -l
            cd $WORKSPACE/deployment/helm/
            ls -l
          cd $WORKSPACE/deployment/helm/$module
          ls -l
          sed -i "s/version: 0.1.0/version: 0.1.$BUILD_NUMBER/g" Chart.yaml
          cat Chart.yaml
          helm version
          helm upgrade --install --namespace $ENV_NAME --debug --force --set image.tag=v$BUILD_NUMBER dummy .
          '''
        }
      }
    }
    stage('test') {
      tools {maven 'mvn'}
      steps {
        sh '''
          wait 5
          mvn test
        '''
      }
    }
  }
}
